@model YLCShopping.Models.Product

@{
  ViewBag.Title = "AdminProductEdit";
  Layout = "~/Views/Shared/_Layout-Admin.cshtml";
}

<style>

    #myList {
        line-height: 50px;
        border-radius: 0px;
    }

    .list-all {
        height: 80px;
        font-size: 24px;
        background: #222D32;
        color: white;
        transition: all 0.3s linear;
    }

        .list-all:hover {
            background-color: #4E5465;
            border-left: 10px solid #e66d5a;
            color: white;
        }

    #active {
        border-style: none;
        border-left: 10px solid #e66d5a;
        background-color: #4E5465;
    }

    #sm-title {
        width: 100%;
        background: #F2F2F2;
        border-left: 10px solid #17A2B8;
        font-size: 22px;
        padding: 10px;
        margin-top: 25px;
    }
</style>

@using (Html.BeginForm("AdminProductEdit", "Admin",
       FormMethod.Post, new { enctype = "multipart/form-data" }))
{
  @Html.AntiForgeryToken()
  <div style="width:15%;height: calc(100vh - 80px);float:left;background-color:#222d32;">
      <div class="list-group" id="myList" role="tablist">
          @Html.ActionLink("main page", "Index", "Admin", new { @class = "list-group-item list-group-item-action list-all" })
          @Html.ActionLink("user", "Users", "Admin", new { @class = "list-group-item list-group-item-action active list-all", @id = "active" })
          @Html.ActionLink("order", "Ordermanagement", "Admin", new { @class = "list-group-item list-group-item-action list-all" })
          @Html.ActionLink("merchandise", "Products", "Admin", new { @class = "list-group-item list-group-item-action list-all" })
          @Html.ActionLink("about", "AboutMe", "Admin", new { @class = "list-group-item list-group-item-action list-all" })
      </div>
  </div>

  <div style="float:left;margin-left:30px;width:80%;">
    <h2 id="sm-title">fix</h2>
    <div class="form-horizontal" style="margin-left:40%;">
        @*<h4>商品修改</h4>*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)



        <div class="form-group" style="margin-left:15px; margin-bottom:5px;">
            <div style="position:relative;">
                <a style="line-height:38px;">merchandise picture</a>
                <a class='btn' href='javascript:;' style="display:inline-block; background:#E9ECEF;border-radius:0 5px 5px 0; margin-bottom:5px;">
                    upload
                    <input type="file" name="Image" size="40"
                           style="position:absolute;z-index:2;top:0;
                            left:0;filter: alpha(opacity=0); opacity:0;
                            background-color:transparent;color:transparent;"
                           onchange='$("#upload-file-info").html($(this).val());'>
                </a>
                <span class='label label-info' id="upload-file-info"></span>
            </div>
            @if (Model.ImageData == null)
            {
                <div class="form-control-static">nothing</div>
            }
            else
            {
                <img class="img-thumbnail" width="150" height="150"
                     src="@Url.Action("GetImage", "Home",
                        new { Model.Id })" />
            }
        </div>


        <div class="form-group" style="height:60px;">
            <div>
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-10" style="width:320px;float:left;">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div style="margin-top:7px;float:left;">
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="height:60px;margin-bottom:10px;margin-top:20px;">
            <div>
                @Html.LabelFor(model => model.ProductCategory.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-10" style="width:320px;float:left;">
                <select name="pp" class="form-control" id="exampleFormControlSelect1">
                    <option selected="selected">@Model.ProductCategory.Name</option>
                    @foreach (var item in (IEnumerable<YLCShopping.Models.ProductCategory>)ViewData["Productpp"])
                    {
                        <option value="@(item.Name)">@(item.Name)</option>
                    }
                </select>
            </div>
            <div style="margin-top:7px;float:left;">
                @Html.ValidationMessageFor(model => model.ProductCategory.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group" style="height:60px;">
            @(Model[i].ProductCategory.Name)
            <div>
                @Html.LabelFor(model => model.ProductCategory.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-10" style="width:320px;float:left;">
                @Html.EditorFor(model => model.ProductCategory.Name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div style="margin-top:7px;float:left;">
                @Html.ValidationMessageFor(model => model.ProductCategory.Name, "", new { @class = "text-danger" })
            </div>

        </div>*@

        <div class="form-group" style="height:60px;">
            <div>
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="col-md-10" style="width:320px;float:left;">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div style="margin-top:7px;float:left;">
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group" style="height:60px;">
            <div>
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="col-md-10" style="width:320px;float:left;">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div style="margin-top:7px;float:left;">
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group" style="height:60px;">
            <div>
                @Html.LabelFor(model => model.Made, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="col-md-10" style="width:320px;float:left;">
                @Html.EditorFor(model => model.Made, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div style="margin-top:7px;float:left;">
                @Html.ValidationMessageFor(model => model.Made, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group" style="height:60px;">
            <div>
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="col-md-10" style="width:320px;float:left;">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div style="margin-top:7px;float:left;">
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group" style="height:60px;">
            <div>
                @Html.LabelFor(model => model.PublishOn, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="col-md-10" style="width:320px;float:left;">
                @Html.EditorFor(model => model.PublishOn, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div style="margin-top:7px;float:left;">
                @Html.ValidationMessageFor(model => model.PublishOn, "", new { @class = "text-danger" })
            </div>

        </div>


        <div class="form-group" style="">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="save" style="margin-left:15px;" class="btn btn-info" />
                &nbsp;&nbsp;&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;
                <div class="btn btn-info" style="margin-left:65px;" onclick="javascript:history.go(-1);">back</div>
            </div>
        </div>
    </div>

  </div>
}

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
